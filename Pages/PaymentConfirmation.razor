@page "/paymentconfirmation/{Id}"

@inject NavigationManager NavigationManager
@inject IFinePaymentService finePaymentService



<PageTitle>Payment confirmation</PageTitle>

<h3>Payment Confirmation</h3>
<br><br>

<p>Your payment has been processed and confirmed.</p>
<p>Here is your payment reference:<strong>@paymentRef</strong>  </p>

<br>
<br>
<br>

If you would like to receive confirmation of payment by email, please enter your email below and click 'send e-mail confirmation':
<br>

<br>
<br>
<br>

        <div class="col-6 offset-1">
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text" id="">E-mail address</span>
                </div>
            <input type="text" class="form-control">
            </div>
        </div>

<br>
<br>


    <div class="col-8">
        @* <button type="button" class="btn btn-primary">Return to Home</button> *@

        <button class="btn btn-primary" @onclick=GoBack>Return to Home</button>

         <button type="button" class="btn btn-success">Send e-mail confirmation</button>
    </div>




@code {
    [Parameter]
    public string? Id { get; set; }

    public float amount { get; set; } // delete if not needed
    public string? caseRef { get; set; } // delete if not needed
    public string? paymentRef { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var finePayment = await finePaymentService.GetFinePayment(long.Parse(Id));
        caseRef = finePayment.CaseReference;
        amount = finePayment.Amount;
        finePayment.PaymentCompleted = true;
        finePayment.PaymentDate = DateTime.Now;
        paymentRef = GeneratePaymentReference(18);
        finePayment.PaymentReference = paymentRef;
        await finePaymentService.SetFinePayment(finePayment);
        Console.WriteLine($"Payment processed: {finePayment.PaymentCompleted} - {finePayment.PaymentDate} - {finePayment.PaymentReference}");
    }
    
    private void GoBack()
    {
        NavigationManager.NavigateTo("/", true); 
    }

    private string GeneratePaymentReference(int length)
    {
        string str = "0123456789";
        string result = System.String.Empty;
        var rnd = new Random();

        for (int i=0; i<length; i++) {
            result += str[rnd.Next(str.Length)];
        }

        return result;
    }    

}
@page "/paymentconfirmation/{Id}"

@inject NavigationManager NavigationManager
@inject IFinePaymentService finePaymentService

<PageTitle>Payment confirmation</PageTitle>
<br>
<div class="form-group row">
    <div class="col-8 offset-1">
<h3>Payment Confirmation</h3>
<br><br>
<p> Payment Reference: <strong> @paymentRef </strong> <br><br>
If you would like to receive this confirmation by email please enter your email below then click finish.</p>
<br>

        <div class="form-group row">
            <div class="col-4">
                <span class ="input-group-text"> Email Address:</span> 
            </div>
        </div>
        
        <div class="form-group row">
            <div class="col-8">
                 @* <input class="form-control form-control-sm" type=text placeholder=".form-control-sm"> </div> *@
                 <input class="form-control"/> 
            </div>
        </div>
<br><br><br>
        <div class="form-group row">
            <div class="col-4 offset-7">
                <button class="btn btn-primary btn-lg form-control" @onclick=GoBack>FINISH</button> 
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string? Id { get; set; }

    public float amount { get; set; } // delete if not needed
    public string caseRef { get; set; } // delete if not needed
    public string paymentRef { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var finePayment = await finePaymentService.GetFinePayment(long.Parse(Id));
        caseRef = finePayment.CaseReference;
        amount = finePayment.Amount;
        finePayment.PaymentCompleted = true;
        finePayment.PaymentDate = DateTime.Now;
        paymentRef = GeneratePaymentReference(18);
        finePayment.PaymentReference = paymentRef;
        await finePaymentService.SetFinePayment(finePayment);
        Console.WriteLine($"Payment processed: {finePayment.PaymentCompleted} - {finePayment.PaymentDate} - {finePayment.PaymentReference}");
    }
    
    private void GoBack()
    {
        NavigationManager.NavigateTo("/", true); 
    }

    private string GeneratePaymentReference(int length)
    {
        string str = "0123456789";
        string result = System.String.Empty;
        var rnd = new Random();

        for (int i=0; i<length; i++) {
            result += str[rnd.Next(str.Length)];
        }

        return result;
    }
    
    
}